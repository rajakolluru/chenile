logging:
  level:
    ROOT: INFO
    org.hibernate.SQL: INFO

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**,.h2.server.properties
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:h2:mem:demo;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: demo
    password: password
    hikari:
      poolName: Hikari
      auto-commit: false
  h2:
    console:
      # disable spring boot built-in h2-console since we start it manually with correct configuration
      enabled: true
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker

  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false

server:
  port: 8000
  error:
    whitelabel:
      enabled: false

query:
  jpa:
    hibernate:
      show_sql: 'true'
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: 'create'
        dialect: org.hibernate.dialect.H2Dialect
  datasource:
    maximumPoolSize: '10'
    type: com.zaxxer.hikari.HikariDataSource
    username: demo
    password: password
    minimumIdle: '2'
    idleTimeout: '5000'
    jdbcUrl: jdbc:h2:mem:demo;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  mapperFiles: classpath*:com/netscore/pos/query/service/mapper/*.xml
  definitionFiles: classpath*:com/netscore/pos/query/service/mapper/*.json
mqtt:
  connection:
    ServerURIs: tcp://localhost:1883
    keepAliveInterval: 120000
    userName: emqx_test
    password: emqx_test_password
    cleanStart: true
    receiveMaximum: 1000
    automaticReconnect: true

  will:
    payload: I am dead
    qos: 0
    retained: false
    topic: willTopic

  clientID: someClient
  actionTimeout: 12000
  enabled: false

  publish:
    actionTimeout: 120
    qos: 2
    retain: true
    topic: /chenile/mqtt

cloud:
  remoteUrl: localhost:8089


