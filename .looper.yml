# In this section we can install different types of tools to install on our node and use.
tools:
  jdk: 8
  maven: 3.6.3

envs:
  global:
    variables:
      slack:
        channel: "sc-aurora-dev-deployment"
        icon: ":looper:"
        user: "PSS CI Bot"

triggers:
  - manual: Run default
  - manual:
      name: Release Build
      call: release


# We define our job flows here.
flows:

  # default flow that will run when you merge into master branch
  default:
    - (name Fetching git tags) git fetch origin --tags
    - call: versionsCheck
    - call: build
    # - call: release

  pr:
    try:
      - call: updateSlack(status="Started", color="#439FE0" flow="${LOOPER_FLOW}")
      - echo "Running build for $GITHUB_PR_URL"
      - call: versionsCheck
      - (name Maven build) mvn -B clean install
      # - (name Maven build) make build
      - call: updateSlack(status="Success", color="good" flow="${LOOPER_FLOW}")
    catch:
      - (name Build Failed) echo "Something went wrong during build."
      - call: updateSlack(status="Failed", color="danger" flow="${LOOPER_FLOW}")
      - (name Indicating Failure) exit 1
    finally:
      - (name Job Completed) echo "Build Job Completed."


  versionsCheck:
    - (name JDK Version) java -version
    - (name Maven version) mvn -v

  build:
    try:
      - call: updateSlack(status="Started", color="#439FE0" flow="${LOOPER_FLOW}")
      # - exposeVars(maven)
      # - (name Project information) echo "Building ${MAVEN_GROUP_ID}:${MAVEN_ARTIFACT_ID}:${MAVEN_VERSION}"
      # - (name Maven deploy) mvn -B clean deploy -DskipTests
      - (name Maven deploy) make clean deploy 
      - call: updateSlack(status="Success", color="good" flow="${LOOPER_FLOW}")
    catch:
      - (name Build Failed) echo "Something went wrong during build."
      - call: updateSlack(status="Failed", color="danger" flow="${LOOPER_FLOW}")
      - (name Indicating Failure) exit 1
    finally:
      - (name Job Completed) echo "Build Job Completed."


  release:
    try:
      - call: updateSlack(status="Started", color="#439FE0" flow="${LOOPER_FLOW}")
      - call: versionsCheck
      - exposeVars(maven)
      - mvn -U -B clean release:prepare release:perform
      - var(RELEASE_VERSION = '%{MAVEN_VERSION.replace("-SNAPSHOT", "")}')
      - echo "Released version ${RELEASE_VERSION}"]
      - call: updateSlack(status="Success", color="good" flow="${LOOPER_FLOW}")
    catch:
      - (name Build Failed) echo "Something went wrong during build."
      - call: updateSlack(status="Failed", color="danger" flow="${LOOPER_FLOW}")
      - (name Indicating Failure) exit 1
    finally:
      - (name Job Completed) echo "Build Job Completed."


  updateSlack:
    # - exposeVars(maven)
    - slack.postMessage:
        message: "<@W1A2BC3DD> Job `${JOB_BASE_NAME}` triggered !"
        channelId: "${slack.channel}"
        iconEmoji: "${slack.icon}"
        username: "${slack.user}"
        attachments:
          - fallback: "Build ${BUILD_DISPLAY_NAME} Triggered at ${BUILD_URL}."
            pretext: "${WORKSPACE}"
            author_name: "Started By - ${USER}"
            title: "Build ${BUILD_DISPLAY_NAME}: Updates"
            title_link: "${BUILD_URL}"
            color: $color
            fields:
              - title: "Job Status"
                value: $status
                short: true
              - title: "Branch"
                value: "${TRIGGER_BRANCH}"
                short: true
              - title: "Flow"
                value: "${flow}"
                short: true
            # last commiter
            actions:
              - type: "button"
                text: "Check Logs"
                url: "${BUILD_URL}/console"
