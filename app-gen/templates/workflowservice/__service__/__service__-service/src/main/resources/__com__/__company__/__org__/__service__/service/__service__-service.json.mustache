{
	"name": "_{{service}}StateEntityService_",
	"id": "{{service}}Service12",
	"healthCheckerName":"{{service}}HealthChecker",
	"operations": [
		{
			"name": "retrieve",
			"url": "/{{service}}/{id}",
			"httpMethod": "GET",
			"produces": "JSON",
			"consumes": "JSON",
			"input": "",
			"output": "{{chenilePackage}}.workflow.dto.StateEntityServiceResponse",
			"params": [
				{
					"name": "id",
					"type": "HEADER",
					"paramClass": "java.lang.String",
					"description": "ID of the {{service}} to retrieve"
				}
			]
		},
		{
			"name": "create",
			"url": "/{{service}}",
			"httpMethod": "POST",
			"produces": "JSON",
			"consumes": "JSON",
			"input": "{{com}}.{{company}}.{{org}}.{{service}}.model.{{Service}}",
			"output": "{{chenilePackage}}.workflow.dto.StateEntityServiceResponse",
			"params": [
				{
					"name": "entity",
					"type": "BODY",
					"description": "The {{service}} that needs to be created",
					"paramClass": "{{chenilePackage}}.workflow.model.AbstractStateEntity"
				}
			]
		},
		{
			"name": "processById",
			"url": "/{{service}}/{id}/{eventID}",
			"httpMethod": "PUT",
			"produces": "JSON",
			"consumes": "JSON",
			"input": "{{com}}.{{company}}.{{org}}.{{service}}.model.{{Service}}",
			"output": "{{chenilePackage}}.workflow.dto.StateEntityServiceResponse",
			"bodyTypeSelectorComponentName": "{{service}}BodyTypeSelector",
			"params": [
				{
					"name": "id",
					"type": "HEADER",
					"description": "The ID of the {{service}} that needs to receive this event",
					"paramClass": "java.lang.String"
				},
				{
					"name": "eventID",
					"type": "HEADER",
					"description": "The event ID that needs to be sent to the {{service}}",
					"paramClass": "java.lang.String"
				},
				{
					"name": "payload",
					"type": "BODY",
					"description": "The payload for the event",
					"paramClass": "java.lang.Object"
				}
			]
		}
	]
}
