 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace = "{{Namespace}}">


<resultMap id = "result" type = "map">
   <result property = "id" column = "ID"/>
   <result property = "name" column = "NAME"/>
   <result property = "branch" column = "BRANCH"/>
   <result property = "percentage" column = "PERCENTAGE"/>
   <result property = "phone" column = "PHONE"/>
   <result property = "email" column = "EMAIL"/>
</resultMap>

<!-- the getAll query supports pagination. So make sure that there exists a count query
with the name getAll-count for such queries. Also all paginated queries must have 
${pagination} as part of them as shown below. -->
<select id='getAll-count' resultType="int" >
	select count(*) from {{namespace}}
</select>

<!-- The ${orderby} keyword ensures that this query is sortable --> 
<select id = "getAll" resultMap = "result">	
   SELECT * FROM {{namespace}} ${orderby} ${pagination}
</select>

<!-- The getSpecific query supports an elaborate where clause. 
The conditional constructs ensure that the clause is constructed only if 
specific filters are passed. Notice that 
branch supports an IN clause and name supports a like clause. 
This information must be reflected in the column meta data in the definitions JSON that 
accompanies this mapper.
-->
<select id = "getSpecific" resultMap = "result">	
   SELECT * FROM {{namespace}}
    <where>
    <if test="branch != null">
         branch in
	    <foreach item="item" index="index" collection="branch"
	             open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </if>
    <if test="name != null">
        AND name like #{name}
    </if>
    <if test="phone != null">
        AND phone = #{phone}
    </if>
  </where>
  ${orderby} 
</select>

<!-- In the getId query the where clause is unconditional since the 
ID is mandatory. Typically getById must be implemented as part of the 
command and not as a query since it needs to read from a command database.
 -->

<select id = "getById" parameterType = "int" resultMap = "result">
  <![CDATA[
   SELECT * FROM {{namespace}} WHERE ID = #{id};
  ]]>
</select>


    	
</mapper>